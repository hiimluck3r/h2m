---
- name: Check if k3sup is installed on a cluster-node
  command: "which k3sup"
  register: k3sup_res
  
- name: Print k3sup_res.rc
  debug:
    msg: "{{ k3sup_res.rc }}"

- name: Install k3sup on a single-node cluster
  shell: "{{ item }}"
  with_list:
    - "curl -sLS https://get.k3sup.dev | sh"
    - "sudo install k3sup /usr/local/bin/" 
  failed_when: k3sup_res.rc == 0
  ignore_errors: true

- name: Create a k3s cluster
  shell: "{{ item }}"
  with_list:
    - "k3sup install --local --user {{ user }} --no-extras"
    - "sudo chmod 644 /etc/rancher/k3s/k3s.yaml"
    - "cp ./kubeconfig $HOME/.kube/config"
    - "sudo chmod 644 $HOME/.kube/config"
    - "sudo chown {{ user }}:{{ user }} $HOME/.kube/config"

- name: Check if cluster is ready
  shell: "k3sup ready"

- name: Change localhost to node IP
  shell: sed -i 's|127.0.0.1|{{ inventory_hostname }}|' $HOME/kubeconfig

- name: Get cluster-node ./kubeconfig
  fetch:
    src: $HOME/kubeconfig
    dest: kubeconfigs/cluster/
    flat: yes

- name: Create the RBAC kube-vip settings
  kubernetes.core.k8s:
    state: present
    src: https://kube-vip.io/manifests/rbac.yaml

- name: Get kube-vip containerd image
  shell: "sudo ctr image pull ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }}"
  ignore_errors: true #something breaks it

- name: Generate kube-vip daemonSet manifest
  shell: "{{ item }} manifest daemonset \
    --interface {{ kube_vip_interface }} \
    --inCluster \
    --taint \
    --services \
    --arp"
  with_list:
    - "sudo ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }} vip /kube-vip"
  register: manifest

- name: Print manifest
  debug:
    msg: "{{ manifest.results.0.stdout_lines | join('\n') }}"

# Used for debug purposes

#- name: Save manifest into roles/init/files/cluster_kubevip.yaml
#  local_action: 
#    module: ansible.builtin.copy
#    content: "{{ manifest.results.0.stdout_lines | join('\n') }}"
#    dest: roles/init/files/cluster_kubevip.yaml

- name: Start kube-vip daemon-set
  kubernetes.core.k8s:
    state: present
    src: "{{ manifest.results.0.stdout_lines | join('\n')}}"