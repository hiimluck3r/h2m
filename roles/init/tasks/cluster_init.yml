---
- name: Create k3s cluster
  shell: "k3sup install --ip {{ inventory_hostname }} --user {{ user }} --no-extras --ssh-key ~/.ssh/ansible"
  delegate_to: localhost

- name: Configure kubeconfig of a cluster
  shell: "{{ item }}"
  with_list:
    - "mkdir -p ~/.kube/"
    - "sudo chmod 644 /etc/rancher/k3s/k3s.yaml"
    - "sudo chown {{ user }}:{{ user }} /etc/rancher/k3s/k3s.yaml"
    - "kubectl config view --raw > ~/.kube/config" #
    - "sudo chmod 644 ~/.kube/config"
    - "sudo chown {{ user }}:{{ user }} ~/.kube/config"

- name: Change localhost to node IP
  shell: "sed -i 's|127.0.0.1|{{ inventory_hostname }}|' {{ item }}"
  with_list:
    #- "/etc/rancher/k3s/k3s.yaml"
    - "~/.kube/config"

- name: Get cluster-node config
  fetch: #something happens here, check
    src: ~/.kube/config
    dest: kubeconfigs/cluster/config
    flat: yes

- name: Create the RBAC kube-vip settings
  kubernetes.core.k8s:
    state: present
    src: https://kube-vip.io/manifests/rbac.yaml

- name: Get kube-vip containerd image
  shell: "sudo ctr image pull ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }}"
  ignore_errors: true

- name: Generate kube-vip daemonSet manifest
  shell: "{{ item }} manifest daemonset \
    --interface {{ kube_vip_interface }} \
    --inCluster \
    --taint \
    --services \
    --arp"
  with_list:
    - "sudo ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }} vip /kube-vip"
  register: manifest

- name: Print manifest
  debug:
    msg: "{{ manifest.results.0.stdout_lines | join('\n') }}"

# Used for debug purposes

#- name: Save manifest into roles/init/manifests/cluster_kubevip.yaml
#  local_action: 
#    module: ansible.builtin.copy
#    content: "{{ manifest.results.0.stdout_lines | join('\n') }}"
#    dest: roles/init/manifests/cluster_kubevip.yaml

- name: Start kube-vip daemon-set
  kubernetes.core.k8s:
    state: present
    definition: "{{ manifest.results.0.stdout_lines | join('\n') }}"