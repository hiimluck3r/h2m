---
- name: Check if k3sup is installed on a leader-node
  command: "which k3sup"
  register: k3sup_res
  ignore_errors: true
  
- name: Print k3sup_res.rc
  debug:
    msg: "{{ k3sup_res.rc }}"

- name: Install k3sup on a leader node
  shell: "{{ item }}"
  with_list:
    - "curl -sLS https://get.k3sup.dev | sh"
    - "sudo install k3sup /usr/local/bin/" 
  failed_when: k3sup_res.rc == 0
  ignore_errors: true

- name: Create a k3s cluster
  shell: "{{ item }}"
  with_list:
    - "mkdir -p ~/.kube/"
    - "k3sup install --local --user {{ user }} --no-extras --tls-san {{ kube_vip_leader_ip }} --cluster --local-path ~/.kube/config"
    - "sudo chmod 644 ~/.kube/config"
    - "sudo chown {{ user }}:{{ user }} ~/.kube/config"

- name: Create the RBAC kube-vip settings
  kubernetes.core.k8s:
    state: present
    src: https://kube-vip.io/manifests/rbac.yaml

- name: Get kube-vip containerd image
  shell: "sudo ctr image pull ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }}"
  ignore_errors: true

- name: Generate kube-vip daemonSet manifest
  shell: "{{ item }} manifest daemonset \
    --interface {{ kube_vip_interface }} \
    --address {{ kube_vip_leader_ip }} \
    --inCluster \
    --taint \
    --controlplane \
    --arp \
    --leaderElection | sudo tee /var/lib/rancher/k3s/server/manifests/kube-vip.yaml"
  with_list:
    - "sudo ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }} vip /kube-vip"

- name: Change localhost to node IP
  shell: "sed -i 's|127.0.0.1|{{ kube_vip_leader_ip }}|' ~/.kube/config"